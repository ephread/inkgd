name: build

on:
  push:
    branches:
    - main
    - github-actions
    - mono
    - godot4
  pull_request:
    branches:
    - main

jobs:
  test:
    name: Build & test
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        destination:
          - "4.1.1"

    steps:
      - name: "(Shared) Check out the repository"
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: 'inkgd'

      - name: "(Shared) Install test dependencies"
        run: |
          sudo apt-get update
          sudo apt-get -y install wget zip unzip

      - name: "(Shared) Inject export preset"
        run: |
          mv inkgd/ci_export_presets.cfg inkgd/export_presets.cfg

      - name: "(Vanilla) Install Godot"
        env:
          VERSION: ${{ matrix.destination }}
        run: |
          wget -q https://downloads.tuxfamily.org/godotengine/${VERSION}/Godot_v${VERSION}-stable_linux.x86_64.zip
          unzip Godot_v${VERSION}-stable_linux.x86_64.zip
          mv Godot_v${VERSION}-stable_linux.x86_64 godot
          chmod +x godot

      # This step exports a dummy PCK to force reimportation.
      #
      # The export is done twice, because it won't import all the required
      # assets at first, since inkgd won't run properly at first due to…
      # … missing assets.
      - name: "(Shared) Reimport Assets"
        run: |
          ./godot --headless --path "inkgd" --export-pack "HTML5" dummy.pck
          ./godot --headless --path "inkgd" --export-pack "HTML5" dummy.pck

      - name: "(Vanilla) Run tests"
        run: |
          ./godot --headless -d -s --path "inkgd" "addons/gut/gut_cmdln.gd"

      # - name: "(Mono) Install Godot"
      #   env:
      #     VERSION: ${{ matrix.destination }}
      #   run: |
      #     wget -q https://downloads.tuxfamily.org/godotengine/${VERSION}/mono/Godot_v${VERSION}-stable_mono_linux_headless_64.zip
      #     unzip Godot_v${VERSION}-stable_mono_linux_headless_64.zip
      #     mv Godot_v${VERSION}-stable_mono_linux_headless_64 godot_mono
      #     mv godot_mono/Godot_v${VERSION}-stable_mono_linux_headless.64 godot_mono/godot_mono
      #     chmod +x godot_mono/godot_mono

      # - name: "(Mono) Install Ink Runtime"
      #   run: |
      #     wget -q https://github.com/inkle/ink/releases/download/v1.0.0/inklecate_windows.zip
      #     unzip inklecate_windows.zip
      #     mv ink-engine-runtime.dll inkgd/addons/inkgd/mono/assemblies/ink-engine-runtime.dll

      # - name: "(Mono) Compile C# solution"
      #   run: |
      #     ./godot_mono/godot_mono --quit --path "inkgd"
      #     cd inkgd
      #     msbuild inkgd.sln /restore /t:Build /p:Configuration=Debug
      #     cd ..

      # - name: "(Mono) Run tests (Mono)"
      #   run: |
      #     ./godot_mono/godot_mono -d -s --path "inkgd" "addons/gut/gut_cmdln.gd"
